// Generated by CoffeeScript 1.4.0

define(function(require, exports) {
  var Events, alphasOnly, extend, tokenize;
  Events = require('backbone').Events;
  extend = require('underscore').extend;
  alphasOnly = function(v) {
    return v.replace(/[^a-zA-Z]+/g, ' ').replace(/[ ]+/g, ' ');
  };
  tokenize = function(v) {
    return v.split(' ');
  };
  exports.SongLocatorClient = (function() {

    extend(SongLocatorClient.prototype, Events);

    function SongLocatorClient(options) {
      var _this = this;
      this.options = options;
      this.sockOpenned = false;
      this.delayed = [];
      this.sock = new WebSocket(options.url || 'ws://localhost:3000');
      this.sock.onopen = function() {
        var msg, _i, _len, _ref, _results;
        _this.log('ready');
        _this.sockOpenned = true;
        _ref = _this.delayed;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          msg = _ref[_i];
          _results.push(_this.sock.send(msg));
        }
        return _results;
      };
      this.sock.onmessage = function(e) {
        var r;
        r = JSON.parse(e.data);
        return _this.trigger('result', r);
      };
    }

    SongLocatorClient.prototype.send = function(msg) {
      msg = JSON.stringify(msg);
      if (this.sockOpenned) {
        return this.sock.send(msg);
      } else {
        return this.delayed.push(msg);
      }
    };

    SongLocatorClient.prototype.search = function(qid, searchString) {
      return this.send({
        qid: qid,
        searchString: searchString,
        method: 'search'
      });
    };

    SongLocatorClient.prototype.resolve = function(qid, artist, track, album) {
      return this.send({
        qid: qid,
        artist: artist,
        track: track,
        album: album,
        method: 'resolve'
      });
    };

    SongLocatorClient.prototype.log = function(msg) {
      if (this.options.debug) {
        return console.log('songlocator: ', msg);
      }
    };

    return SongLocatorClient;

  })();
  return exports;
});
